external_templates:
  - repo: templates/collections
  - repo: templates/dynamic_collections

templates:
  # Normal Templates
  # ----------------

  # Dynamic Collections Templates
  # -----------------------------

  # Per-year award winners and nominees
  Yearly_Oscars_Winners:
    allowed_library_types: movie
    summary: <<key>> Academy Awards (Oscars) Winners
    sort_title: 050_Oscars_<<key>>_Winners
    imdb_award:
      event_id: ev0000003
      event_year: <<key>>
      winning: true
      # Categories change too much year-to-year to attempt to filter
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/oscars/winner/<<key>>.jpg
    schedule: monthly(05)

  # TODO: Oscar Nominees?

  Yearly_Golden_Globes_Winners:
    summary: <<key>> Golden Globe Winners
    sort_title: 050_Golden_Globes_<<key>>_Winners
    imdb_award:
      event_id: ev0000292
      event_year: <<key>>
      winning: true
      # Categories change too much year-to-year to attempt to filter
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/golden/winner/<<key>>.jpg
    schedule: monthly(09)

  # TODO: Golden Globe Nominees?

  Yearly_Razzie_Winners:
    summary: <<key>> Golden Raspberry Winners
    sort_title: 051_Razzie_<<key>>_Winners
    imdb_award:
      event_id: ev0000558
      event_year: <<key>>
      winning: true
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/razzie/winner/<<key>>.jpg
    schedule: monthly(13)

  Yearly_Razzie_Nominees:
    summary: <<key>> Golden Raspberry Nominees
    sort_title: 051_Razzie_<<key>>_Nominees
    imdb_award:
      event_id: ev0000558
      event_year: <<key>>
      winning: false
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/razzie/<<key>>.jpg
    schedule: monthly(13)

  Yearly_Cannes_Winners:
    summary: <<key>> Cannes Film Festival Winners
    sort_title: 050_Cannes_<<key>>_Winners
    imdb_award:
      event_id: ev0000147
      event_year: <<key>>
      winning: true
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/cannes/winner/<<key>>.jpg
    schedule: monthly(07)

  Yearly_Cannes_Nominees:
    summary: <<key>> Cannes Film Festival Nominees
    sort_title: 050_Cannes_<<key>>_Nominees
    imdb_award:
      event_id: ev0000147
      event_year: <<key>>
      winning: false
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/cannes/<<key>>.jpg
    schedule: monthly(07)

  Yearly_BAFTA_Winners:
    summary: <<key>> BAFTA Winners
    sort_title: 050_BAFTA_<<key>>_Winners
    imdb_award:
      event_id: ev0000123
      event_year: <<key>>
      winning: true
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/bafta/winner/<<key>>.jpg
    schedule: monthly(12)

  Yearly_BAFTA_Nominees:
    summary: <<key>> BAFTA Nominees
    sort_title: 050_BAFTA_<<key>>_Nominees
    imdb_award:
      event_id: ev0000123
      event_year: <<key>>
      winning: false
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/bafta/<<key>>.jpg
    schedule: monthly(12)

  Yearly_Berlinale_Winners:
    summary: <<key>> Berlinale International Film Festival Winners
    sort_title: 050_Berlinale_<<key>>_Winners
    imdb_award:
      event_id: ev0000091
      event_year: <<key>>
      winning: true
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/berlinale/winner/<<key>>.jpg
    schedule: monthly(06)

  Yearly_Berlinale_Nominees:
    summary: <<key>> Berlinale International Film Festival Nominees
    sort_title: 050_Berlinale_<<key>>_Nominees
    imdb_award:
      event_id: ev0000091
      event_year: <<key>>
      winning: false
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/berlinale/<<key>>.jpg
    schedule: monthly(06)

  Yearly_Critics_Choice_Awards_Winners:
    summary: <<key>> Critics Choice Awards Winners
    sort_title: 050_Critics_<<key>>_Winners
    imdb_award:
      event_id: ev0000341
      event_year: <<key>>
      winning: true
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/choice/winner/<<key>>.jpg
    schedule: monthly(11)

  Yearly_Critics_Choice_Awards_Nominees:
    summary: <<key>> Critics Choice Awards Nominees
    sort_title: 050_Critics_<<key>>_Nominees
    imdb_award:
      event_id: ev0000341
      event_year: <<key>>
      winning: false
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/choice/<<key>>.jpg
    schedule: monthly(11)

  Yearly_Spirit_Awards_Winners:
    summary: <<key>> Independent Spirit Awards Winners
    sort_title: 050_Spirit_<<key>>_Winners
    imdb_award:
      event_id: ev0000349
      event_year: <<key>>
      winning: true
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/spirit/winner/<<key>>.jpg
    schedule: monthly(10)

  Yearly_Spirit_Awards_Nominees:
    summary: <<key>> Independent Spirit Awards Nominees
    sort_title: 050_Spirit_<<key>>_Nominees
    imdb_award:
      event_id: ev0000349
      event_year: <<key>>
      winning: false
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/spirit/<<key>>.jpg
    schedule: monthly(10)

  Yearly_Sundance_Winners:
    summary: <<key>> Sundance Film Festival Winners
    sort_title: 050_Sundance_<<key>>_Winners
    imdb_award:
      event_id: ev0000631
      event_year: <<key>>
      winning: true
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/sundance/winner/<<key>>.jpg
    schedule: monthly(08)

  Yearly_Sundance_Nominees:
    summary: <<key>> Sundance Film Festival Nominees
    sort_title: 050_Sundance_<<key>>_Nominees
    imdb_award:
      event_id: ev0000631
      event_year: <<key>>
      winning: false
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/sundance/<<key>>.jpg
    schedule: monthly(08)

  Yearly_Cesar_Awards_Winners:
    summary: <<key>> Cesar Awards Winners
    sort_title: 050_Cesar_<<key>>_Winners
    imdb_award:
      event_id: ev0000157
      event_year: <<key>>
      winning: true
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/cesar/winner/<<key>>.jpg
    schedule: monthly(03)

  Yearly_Cesar_Awards_Nominees:
    summary: <<key>> Cesar Awards Nominees
    sort_title: 050_Cesar_<<key>>_Nominees
    imdb_award:
      event_id: ev0000157
      event_year: <<key>>
      winning: false
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/cesar/<<key>>.jpg
    schedule: monthly(03)

  Yearly_Venice_Awards_Winners:
    summary: <<key>> Venice Film Festival Winners
    sort_title: 050_Venice_<<key>>_Winners
    imdb_award:
      event_id: ev0000681
      event_year: <<key>>
      winning: true
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/venice/winner/<<key>>.jpg
    schedule: monthly(09)

  Yearly_Venice_Awards_Nominees:
    summary: <<key>> Venice Film Festival Nominees
    sort_title: 050_Venice_<<key>>_Nominees
    imdb_award:
      event_id: ev0000681
      event_year: <<key>>
      winning: false
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/venice/<<key>>.jpg
    schedule: monthly(09)

  Yearly_Toronto_Awards_Winners:
    summary: <<key>> Toronto Film Festival Winners
    sort_title: 050_Toronto_<<key>>_Winners
    imdb_award:
      event_id: ev0000659
      event_year: <<key>>
      winning: true
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/toronto/winner/<<key>>.jpg
    schedule: monthly(15)

  Yearly_Toronto_Awards_Nominees:
    summary: <<key>> Toronto Film Festival Nominees
    sort_title: 050_Toronto_<<key>>_Nominees
    imdb_award:
      event_id: ev0000659
      event_year: <<key>>
      winning: false
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/toronto/<<key>>.jpg
    schedule: monthly(15)

collections:
  # This year's Oscar nominees (all)
  # Only visible on home screen during Oscar season
  "üéñÔ∏èThis Year's Oscar Nominees":
    summary: "Who will take home the trophy?"
    template: { name: Award,
                level: "++++" }
    imdb_award:
      event_id: ev0000003
      event_year: 2023  # TODO: Change this every year
      winning: false
    schedule: # Usually late February to mid-March, has been as late as April (one-day)
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/31)]
      - yearly(04/01)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: random
    visible_home: range(02/01-03/31)
    visible_shared: range(02/01-03/31)
    visible_library: range(02/01-03/31)
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/oscars/nomination.jpg

  # All past Oscar-winning movies
  # Only visible on home screen during Oscar season
  "üèÜ Past Oscar Winners":
    summary: "Oscar-winning Movies"
    template: { name: Award,
                level: "++" }
    imdb_search:
      event.winning: oscar
    schedule: # Usually late February to mid-March, has been as late as April (one-day)
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/31)]
      - yearly(04/01)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: random
    visible_home: range(02/01-03/31)
    visible_shared: range(02/01-03/31)
    visible_library: true # Always visible in library
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/oscars/winner.jpg

  # This year's Best Picture Oscar nominees
  # Only visible on home screen during Oscar season
  "üé¨ This Year's Best Picture Nominees":
    template: { name: Award,
                level: "++++++" }
    summary: "Who will take home the trophy?"
    imdb_award:
      event_id: ev0000003
      event_year: 2023  # TODO: Change this every year
      winning: false
      category_filter: Best Motion Picture of the Year
    schedule: # Usually late February to mid-March, has been as late as April (one-day)
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/31)]
      - yearly(04/01)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: random
    visible_home: range(02/01-03/31)
    visible_shared: range(02/01-03/31)
    visible_library: range(02/01-03/31)
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/oscars/nomination.jpg

  # All past Oscar Best Picture-winning movies
  # Only visible on home screen during Oscar season
  "üèÜ Past Best Picture Winners":
    summary: "The Academy Award for Best Picture is one of the Academy Awards presented annually by the Academy of Motion Picture Arts and Sciences since the awards debuted in 1929."
    template: { name: Award,
                level: "++" }
    imdb_list:
      # TODO: Might need to change
      - https://www.imdb.com/search/title/?title_type=feature&groups=best_picture_winner
    schedule: # Usually late February to mid-March, has been as late as April (one-day)
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/31)]
      - yearly(04/01)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: release.desc
    visible_home: range(02/01-03/31)
    visible_shared: range(02/01-03/31)
    visible_library: true # Always visible in library
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/oscars/best_picture_winner.jpg

  # This year's Razzie nominees
  # Only visible on home screen during Razzie season
  "üçì This Year's Razzie Nominees":
    summary: "Who will take home the trophy?"
    template: { name: Award,
                level: "+++" }
    imdb_award:
      event_id: ev0000558
      event_year: 2023  # TODO: Change this every year
      winning: false
    schedule: # Day before the Oscars (one day)
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/31)]
      - yearly(04/01)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: random
    visible_home: range(02/01-03/31)
    visible_shared: range(02/01-03/31)
    visible_library: range(02/01-03/31)
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/razzies/nomination.jpg


  # All past Razzie-winning Worst Picture movies
  # Only visible on home screen during Razzie season
  "ü§Æ Past Razzie Winners":
    template: { name: Award,
                level: "++" }
    summary: "Previous Razzie Worst Picture winners"
    mdblist_list: https://mdblist.com/lists/hdlists/razzie-awards-worst-picture-winners
    schedule: # Day before the Oscars (one day)
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/31)]
      - yearly(04/01)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: release.desc
    visible_home: range(02/01-03/31)
    visible_shared: range(02/01-03/31)
    visible_library: true # Always visible in library
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/razzies/winner.jpg

  # This year's BAFTA nominees
  # Only visible on home screen during BAFTA season
  "üá¨üáß This Year's BAFTA Nominees":
    summary: "Who will take home the trophy?"
    template: { name: Award,
                level: "+++" }
    imdb_award:
      event_id: ev0000123
      event_year: 2023  # TODO: Change this every year
      winning: false
    schedule: # Usually February, but has been as late as April (one day)
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/05)]
      - yearly(03/06)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: random
    visible_home: range(02/01-03/05)
    visible_shared: range(02/01-03/05)
    visible_library: range(02/01-03/05)
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/bafta/nomination.jpg

  # All past BAFTA Best Film-winning movies
  # Only visible on home screen during BAFTA season
  "üá¨üáß Past BAFTA Best Film Winners":
    summary: "The EE British Academy Film Awards or BAFTA Film Awards are presented in an annual award show hosted by the British Academy of Film and Television Arts (BAFTA) to honour the best British and international contributions to film."
    template: { name: Award,
                level: "++" }
    trakt_list: https://trakt.tv/users/maxwelldeux/lists/bafta-award-best-film
    schedule: # Usually February, but has been as late as April (one day)
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/05)]
      - yearly(03/06)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: release.desc
    visible_home: range(02/01-03/05)
    visible_shared: range(02/01-03/05)
    visible_library: range(02/01-03/05)
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/bafta/winner.jpg

  # This year's Berlinale nominees
  # Only visible on home screen during Berlinale season
  "üá©üá™ This Year's Berlinale Nominees":
    summary: "Who will take home the trophy?"
    template: { name: Award,
                level: "+++" }
    imdb_award:
      event_id: ev0000091
      event_year: 2023  # TODO: Change this every year
      winning: false
    schedule: # February to early March (multiple days)
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/07)]
      - yearly(03/08)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: random
    visible_home: range(02/01-03/07)
    visible_shared: range(02/01-03/07)
    visible_library: range(02/01-03/07)
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/berlinale/nomination.jpg

  # All past Berlinale-winning movies
  # Only visible on home screen during Berlinale season
  "üá©üá™ Past Berlinale Winners":
    summary: "The Berlin International Film Festival, usually called the Berlinale, is a film festival held annually in Berlin, Germany."
    template: { name: Award,
                level: "++" }
    trakt_list: https://trakt.tv/users/maxwelldeux/lists/berlin-international-film-festival-golden-bears
    schedule: # February to early March (multiple days)
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/07)]
      - yearly(03/08)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: release.desc
    visible_home: range(02/01-03/07)
    visible_shared: range(02/01-03/07)
    visible_library: range(02/01-03/07)
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/berlinale/winner.jpg

  # This year's Cannes nominees
  # Only visible on home screen during Cannes season
  "üïäÔ∏è This Year's Cannes Nominees":
    summary: "Who will take home the trophy?"
    template: { name: Award,
                level: "+++" }
    imdb_award:
      event_id: ev0000147
      event_year: 2023  # TODO: Change this every year
      winning: false
    schedule: # Usually May (multiple days)
      - yearly(05/01)
      - all[weekly(friday),range(05/01-06/09)]
      - yearly(06/10)
      # You have to schedule it to run again after visibility timeframe for visibility to switch back
    collection_order: random
    visible_home: range(05/01-06/09)
    visible_shared: range(05/01-06/09)
    visible_library: range(05/01-06/09)
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/cannes/nomination.jpg

  # All past Cannes winning movies (specifically Palme d'Or)
  # Only visible on home screen during Cannes season
  "üïäÔ∏è Past Cannes Palme d'or Winners":
    summary: "The Palme d'Or is the highest prize awarded at the Cannes Film Festival. It was introduced in 1955 by the organising committee."
    template: { name: Award,
                level: "++" }
    trakt_list: https://trakt.tv/users/maxwelldeux/lists/cannes-film-festival-palme-d-or
    schedule: # Usually May (multiple days)
      - yearly(05/01)
      - all[weekly(friday),range(05/01-06/09)]
      - yearly(06/10)
      # You have to schedule it to run again after visibility timeframe for visibility to switch back
    collection_order: release.desc
    visible_home: range(05/01-06/09)
    visible_shared: range(05/01-06/09)
    visible_library: range(05/01-06/09)
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/cannes/winner.jpg

  # This year's Cesars nominees
  # Only visible on home screen during Cesars season
  "üá´üá∑ This Year's Cesar Award Nominees":
    summary: "Who will take home the trophy?"
    template: { name: Award,
                level: "+++" }
    imdb_award:
      event_id: ev0000157
      event_year: 2023  # TODO: Change this every year
      winning: false
    schedule: # February (multiple days)
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/02)]
      - yearly(03/03)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: random
    visible_home: range(02/01-03/02)
    visible_shared: range(02/01-03/02)
    visible_library: range(02/01-03/02)
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/cesar/nomination.jpg

  # All past Cesar Award-winning movies
  # Only visible on home screen during Cesar Award season
  "üá´üá∑ Past Cesar Award Winners":
    summary: "The C√©sar Award is the national film award of France. It is delivered in the Nuit des C√©sar ceremony and was first awarded in 1976."
    template: { name: Award,
                level: "++" }
    trakt_list: https://trakt.tv/users/fauxliege/lists/cesar-meilleur-film
    schedule: # February (multiple days)
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/02)]
      - yearly(03/03)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: release.desc
    visible_home: range(02/01-03/02)
    visible_shared: range(02/01-03/02)
    visible_library: range(02/01-03/02)
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/cesar/winner.jpg

  # This year's Sundance nominees
  # Only visible on home screen during Sundance season
  "üá∫üá∏ This Year's Sundance Nominees":
    summary: "Who will take home the trophy?"
    template: { name: Award,
                level: "+++" }
    imdb_award:
      event_id: ev0000631
      event_year: 2023  # TODO: Change this every year
      winning: false
    schedule: # mid-to-late January (multiple days)
      - yearly(01/13)
      - all[weekly(friday),range(01/13-02/12)]
      - yearly(02/13)
      # You have to schedule it to run again after visibility timeframe for visibility to switch back
    collection_order: random
    visible_home: range(01/13-02/12)
    visible_shared: range(01/13-02/12)
    visible_library: range(01/13-02/12)
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/sundance/nomination.jpg

  # All past Sundance-winning movies
  # Only visible on home screen during Sundance season
  "üá∫üá∏ Past Sundance Winners":
    summary: "Sundance is the largest independent film festival in the United States. Held in January, the festival is the premier showcase for new work from American and international independent filmmakers."
    template: { name: Award,
                level: "++" }
    trakt_list: https://trakt.tv/users/maxwelldeux/lists/sundance-film-festival-grand-jury-prize
    schedule: # mid-to-late January (multiple days)
      - yearly(01/13)
      - all[weekly(friday),range(01/13-02/12)]
      - yearly(02/13)
      # You have to schedule it to run again after visibility timeframe for visibility to switch back
    collection_order: release.desc
    visible_home: range(01/13-02/12)
    visible_shared: range(01/13-02/12)
    visible_library: range(01/13-02/12)
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/sundance/winner.jpg

  "üáÆüáπ This Year's Venice Film Festival Nominees":
    summary: "Who will take home the trophy?"
    template: { name: Award,
                level: "+++" }
    imdb_award:
      event_id: ev0000681
      event_year: 2023  # TODO: Change this every year
      winning: false
    schedule: # Late August to early September (multiple days)
      - yearly(08/21)
      - all[weekly(friday),range(08/21-09/20)]
      - yearly(09/21)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: random
    visible_home: range(08/21-09/20)
    visible_shared: range(08/21-09/20)
    visible_library: range(08/21-09/20)
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/venice/nomination.jpg

  # All past Venice Film Festival-winning movies
  # Only visible on home screen during Venice Film Festival season
  "üáÆüáπ Past Venice Film Festival Winners":
    summary: "The Venice Film Festival or Venice International Film Festival (Italian: Mostra Internazionale d'Arte Cinematografica della Biennale di Venezia is the world's oldest film festival"
    template: { name: Award,
                level: "++" }
    trakt_list: https://trakt.tv/users/maxwelldeux/lists/venice-film-festival-golden-lion
    schedule: # Late August to early September (multiple days)
      - yearly(08/21)
      - all[weekly(friday),range(08/21-09/20)]
      - yearly(09/21)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: release.desc
    visible_home: range(08/21-09/20)
    visible_shared: range(08/21-09/20)
    visible_library: range(08/21-09/20)
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/venice/winner.jpg

  # This year's Toronto Film Festival nominees
  # Only visible on home screen during Toronto Film Festival season
  "üá®üá¶ This Year's Toronto Film Festival Nominees":
    summary: "Who will take home the trophy?"
    template: { name: Award,
                level: "+++" }
    imdb_award:
    event_id: ev0000659
    event_year: 2023  # TODO: Change this every year
    winning: false
    schedule: # September (starts Thursday after the first Monday) (multiple days)
      - yearly(09/01)
      - all[weekly(friday),range(09/01-09/30)]
      - yearly(10/01)
    collection_order: random
    visible_home: range(09/01-09/30)
    visible_shared: range(09/01-09/30)
    visible_library: range(09/01-09/30)
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/toronto/nomination.jpg

  # All past Toronto Film Festival-winning movies (specifically People's Choice Award)
  # Only visible on home screen during Toronto Film Festival season
  "üá®üá¶ Past Toronto Film Festival Winners":
    summary: "The Toronto International Film Festival is one of the largest publicly attended film festivals in the world, attracting over 480,000 people annually."
    template: { name: Award,
                level: "++" }
    trakt_list: https://trakt.tv/users/maxwelldeux/lists/tiff-people-s-choice-award
    schedule: # September (starts Thursday after the first Monday) (multiple days)
      - yearly(09/01)
      - all[weekly(friday),range(09/01-09/30)]
      - yearly(10/01)
      # You have to schedule it to run again after visibility timeframe for visibility to switch back
    collection_order: release.desc
    visible_home: range(09/01-09/30)
    visible_shared: range(09/01-09/30)
    visible_library: range(09/01-09/30)
    url_poster: https://raw.githubusercontent.com/meisnate12/Plex-Meta-Manager-Images/master/award/toronto/winner.jpg  # TODO: Does not exist yet

  ### This year's Oscar Best Actor Collections
  # ---------------------------------

  # This current year's Best Actor Oscar nominees
  # Only visible on home screen during Oscar season

  "üé≠ 2023 Best Actor Nominee - Austin Butler":
    template: { name: ActorAward,
                level: "+++++",
                tmdb: 86654 }
    schedule:
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/31)]
      - yearly(04/01)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: release.desc
    visible_home: range(02/01-03/31)
    visible_shared: range(02/01-03/31)
    visible_library: range(02/01-03/31)

  "üé≠ 2023 Best Actor Nominee - Colin Farrell":
    template: { name: ActorAward,
                level: "+++++",
                tmdb: 72466 }
    schedule:
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/31)]
      - yearly(04/01)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: release.desc
    visible_home: range(02/01-03/31)
    visible_shared: range(02/01-03/31)
    visible_library: range(02/01-03/31)

  "üé≠ 2023 Best Actor Nominee - Brendan Fraser":
    template: { name: ActorAward,
                level: "+++++",
                tmdb: 18269 }
    schedule:
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/31)]
      - yearly(04/01)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: release.desc
    visible_home: range(02/01-03/31)
    visible_shared: range(02/01-03/31)
    visible_library: range(02/01-03/31)

  "üé≠ 2023 Best Actor Nominee - Paul Mescal":
    template: { name: ActorAward,
                level: "+++++",
                tmdb: 2326151 }
    schedule:
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/31)]
      - yearly(04/01)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: release.desc
    visible_home: range(02/01-03/31)
    visible_shared: range(02/01-03/31)
    visible_library: range(02/01-03/31)

  "üé≠ 2023 Best Actor Nominee - Bill Nighy":
    template: { name: ActorAward,
                level: "+++++",
                tmdb: 2440 }
    schedule:
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/31)]
      - yearly(04/01)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: release.desc
    visible_home: range(02/01-03/31)
    visible_shared: range(02/01-03/31)
    visible_library: range(02/01-03/31)


  ### This year's Oscar Best Actress Collections
  # ---------------------------------

  # This current year's Best Actress Oscar nominees
  # Only visible on home screen during Oscar season

  "üé≠ 2023 Best Actress Nominee - Cate Blanchett":
    template: { name: ActorAward,
                level: "+++++",
                tmdb: 112 }
    schedule:
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/31)]
      - yearly(04/01)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: release.desc
    visible_home: range(02/01-03/31)
    visible_shared: range(02/01-03/31)
    visible_library: range(02/01-03/31)

  "üé≠ 2023 Best Actress Nominee - Ana de Armas":
    template: { name: ActorAward,
                level: "+++++",
                tmdb: 224513 }
    schedule:
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/31)]
      - yearly(04/01)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: release.desc
    visible_home: range(02/01-03/31)
    visible_shared: range(02/01-03/31)
    visible_library: range(02/01-03/31)

  "üé≠ 2023 Best Actress Nominee - Andrea Riseborough":
    template: { name: ActorAward,
                level: "+++++",
                tmdb: 127558 }
    schedule:
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/31)]
      - yearly(04/01)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: release.desc
    visible_home: range(02/01-03/31)
    visible_shared: range(02/01-03/31)
    visible_library: range(02/01-03/31)

  "üé≠ 2023 Best Actress Nominee - Michelle Williams":
    template: { name: ActorAward,
                level: "+++++",
                tmdb: 1812 }
    schedule:
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/31)]
      - yearly(04/01)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: release.desc
    visible_home: range(02/01-03/31)
    visible_shared: range(02/01-03/31)
    visible_library: range(02/01-03/31)

  "üé≠ 2023 Best Actress Nominee - Michelle Yeoh":
    template: { name: ActorAward,
                level: "+++++",
                tmdb: 1620 }
    schedule:
      - yearly(02/01)
      - all[weekly(friday),range(02/01-03/31)]
      - yearly(04/01)
      # You have to schedule it to run before and after visibility timeframe for visibility to switch
    collection_order: release.desc
    visible_home: range(02/01-03/31)
    visible_shared: range(02/01-03/31)
    visible_library: range(02/01-03/31)

dynamic_collections:
  Yearly Oscars Winners DC: # mapping name does not matter just needs to be unique
    type: number
    sync: true
    data:
      starting: 1927
      ending: current_year
    title_format: Academy Awards Winners <<key_name>>
    template:
      - Yearly_Oscars_Winners

  # TODO: Oscars Nominees?

  Yearly Golden Globes Winners Movies DC: # mapping name does not matter just needs to be unique
    type: number
    sync: true
    data:
      starting: 1943
      ending: current_year
    title_format: Golden Globes Winners <<key_name>>
    template:
      - Yearly_Golden_Globes_Winners

  # TODO: Golden Globes Nominees?

  Yearly Razzie Winners DC: # mapping name does not matter just needs to be unique
    type: number
    sync: true
    data:
      starting: 1980
      ending: current_year
    title_format: Golden Raspberry Winners <<key_name>>
    template:
      - Yearly_Razzie_Winners

  Yearly Cannes Nominees DC: # mapping name does not matter just needs to be unique
    type: number
    sync: true
    data:
      starting: 1946
      ending: current_year
    title_format: Cannes Film Festival Nominees <<key_name>>
    template:
      - Yearly_Cannes_Nominees

  Yearly BAFTA Nominees DC: # mapping name does not matter just needs to be unique
    type: number
    sync: true
    data:
      starting: 1948
      ending: current_year
    title_format: BAFTA Nominees <<key_name>>
    template:
      - Yearly_BAFTA_Nominees

  Yearly Berlinale Nominees DC: # mapping name does not matter just needs to be unique
    type: number
    sync: true
    data:
      starting: 1951
      ending: current_year
    title_format: Berlinale International Film Festival Nominees <<key_name>>
    template:
      - Yearly_Berlinale_Nominees

  Yearly Critics Choice Awards Nominees DC: # mapping name does not matter just needs to be unique
    type: number
    sync: true
    data:
      starting: 1996
      ending: current_year
    title_format: Critics Choice Awards Nominees <<key_name>>
    template:
      - Yearly_Critics_Choice_Awards_Nominees

  Yearly Spirit Awards Nominees DC: # mapping name does not matter just needs to be unique
    type: number
    sync: true
    data:
      starting: 1986
      ending: current_year
    title_format: Independent Spirit Awards Nominees <<key_name>>
    template:
      - Yearly_Spirit_Awards_Nominees

  Yearly Sundance Nominees DC: # mapping name does not matter just needs to be unique
    type: number
    sync: true
    data:
      starting: 1982
      ending: current_year
    title_format: Sundance Film Festival Nominees <<key_name>>
    template:
      - Yearly_Sundance_Nominees

  Yearly Cesar Awards Nominees DC: # mapping name does not matter just needs to be unique
    type: number
    sync: true
    data:
      starting: 1976
      ending: current_year
    title_format: Cesar Awards Nominees <<key_name>>
    template:
      - Yearly_Cesar_Awards_Nominees

  Yearly Venice Nominees DC: # mapping name does not matter just needs to be unique
    type: number
    sync: true
    data:
      starting: 1932
      ending: current_year
    title_format: Venice Film Festival Nominees <<key_name>>
    template:
      - Yearly_Venice_Awards_Nominees

  # TODO: Posters for TIFF do not exist yet
  # Yearly Toronto Winners DC: # mapping name does not matter just needs to be unique
  #  type: number
  #  sync: true
  #  data:
  #    starting: 1978
  #    ending: current_year
  #  title_format: Toronto Film Festival Winners <<key_name>>
  #  template:
  #    - Yearly_Toronto_Winners

  # Yearly Toronto Nominees DC: # mapping name does not matter just needs to be unique
  #  type: number
  #  sync: true
  #  data:
  #    starting: 1978
  #    ending: current_year
  #  title_format: Toronto Film Festival Nominees <<key_name>>
  #  template:
  #    - Yearly_Toronto_Nominees
